{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useLocalStorage } from 'react-use';\n\nfunction useGlobalProvider() {\n  _s();\n\n  const [clientes, setClientes] = useState([]);\n  const [abrirModalAddCliente, setAbrirModalAddCliente] = useState(false);\n  const [abrirModalFeedbackAddCliente, setAbrirModalFeedbackAddCliente] = useState(false);\n  const [token, setToken, removeToken] = useLocalStorage('token', '');\n  const [nomeEmail, setNomeEmail, removeNomeEmail] = useLocalStorage('nomeEmail', {\n    nome: '',\n    email: ''\n  });\n\n  async function handleAdicionarCliente(body) {\n    try {\n      const response = await fetch('https://desafio-modulo-5.herokuapp.com/clientes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(body)\n      });\n      const data = await response.json();\n      console.log(data);\n      handleCarregarClientes();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleCarregarClientes() {\n    try {\n      const response = await fetch('https://desafio-modulo-5.herokuapp.com/clientes', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setClientes(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleObeterUsuario() {\n    try {\n      const response = await fetch('https://desafio-modulo-5.herokuapp.com/perfil', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleEditarUsuario(body) {\n    try {\n      const response = await fetch('https://desafio-modulo-5.herokuapp.com/perfil', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(body)\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return {\n    handleAdicionarCliente,\n    handleCarregarClientes,\n    clientes,\n    token,\n    setToken,\n    removeToken,\n    abrirModalAddCliente,\n    setAbrirModalAddCliente,\n    abrirModalFeedbackAddCliente,\n    setAbrirModalFeedbackAddCliente,\n    handleObeterUsuario,\n    handleEditarUsuario,\n    nomeEmail,\n    setNomeEmail\n  };\n}\n\n_s(useGlobalProvider, \"LfUmrIdrdm2dbc1g+Ym9KRgTsGY=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n\nexport default useGlobalProvider;","map":{"version":3,"sources":["/Users/raphaelsouzadeoliveira/Projetos/cubos/front-integral-m05-desafio-t04/front-desafio-final/src/hooks/useGlobalProvider.js"],"names":["useState","useLocalStorage","useGlobalProvider","clientes","setClientes","abrirModalAddCliente","setAbrirModalAddCliente","abrirModalFeedbackAddCliente","setAbrirModalFeedbackAddCliente","token","setToken","removeToken","nomeEmail","setNomeEmail","removeNomeEmail","nome","email","handleAdicionarCliente","body","response","fetch","method","headers","Authorization","JSON","stringify","data","json","console","log","handleCarregarClientes","error","handleObeterUsuario","handleEditarUsuario"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useLocalStorage } from 'react-use';\n\nfunction useGlobalProvider() {\n  const [clientes, setClientes] = useState([]);\n  const [abrirModalAddCliente, setAbrirModalAddCliente] = useState(false);\n  const [abrirModalFeedbackAddCliente, setAbrirModalFeedbackAddCliente] =\n    useState(false);\n  const [token, setToken, removeToken] = useLocalStorage('token', '');\n  const [nomeEmail, setNomeEmail, removeNomeEmail] = useLocalStorage(\n    'nomeEmail',\n    { nome: '', email: '' }\n  );\n\n  async function handleAdicionarCliente(body) {\n    try {\n      const response = await fetch(\n        'https://desafio-modulo-5.herokuapp.com/clientes',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify(body)\n        }\n      );\n\n      const data = await response.json();\n      console.log(data);\n      handleCarregarClientes();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleCarregarClientes() {\n    try {\n      const response = await fetch(\n        'https://desafio-modulo-5.herokuapp.com/clientes',\n        {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }\n      );\n\n      const data = await response.json();\n\n      setClientes(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleObeterUsuario() {\n    try {\n      const response = await fetch(\n        'https://desafio-modulo-5.herokuapp.com/perfil',\n        {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }\n      );\n\n      const data = await response.json();\n\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleEditarUsuario(body) {\n    try {\n      const response = await fetch(\n        'https://desafio-modulo-5.herokuapp.com/perfil',\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify(body)\n        }\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return {\n    handleAdicionarCliente,\n    handleCarregarClientes,\n    clientes,\n    token,\n    setToken,\n    removeToken,\n    abrirModalAddCliente,\n    setAbrirModalAddCliente,\n    abrirModalFeedbackAddCliente,\n    setAbrirModalFeedbackAddCliente,\n    handleObeterUsuario,\n    handleEditarUsuario,\n    nomeEmail,\n    setNomeEmail\n  };\n}\n\nexport default useGlobalProvider;\n"]},"metadata":{},"sourceType":"module"}